{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // ------------  naming must start with use ---------------------\n\nconst useCounter = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    if (upWord) {\n      const interval = setInterval(() => {\n        setCounter(prevCounter => prevCounter + 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    } else {}\n  }, []);\n  return counter;\n};\n\n_s(useCounter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\nexport default useCounter;","map":{"version":3,"names":["useState","useEffect","useCounter","counter","setCounter","upWord","interval","setInterval","prevCounter","clearInterval"],"sources":["/Users/mac/Desktop/PRACTIC/1/React/Custom_REact_Hook_SEC_15/01-starting-project/src/hooks/use-counter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\n// ------------  naming must start with use ---------------------\nconst useCounter = ()=>{\n    const [counter, setCounter] = useState(0);\n\n    useEffect(() => {\n        if(upWord){\n            const interval = setInterval(() => {\n              setCounter((prevCounter) => prevCounter + 1);\n            }, 1000);\n        \n            return () => clearInterval(interval);\n        }else{}\n    }, []);\n  \n    return counter;\n\n};\n\nexport default useCounter;"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,MAAMC,UAAU,GAAG,MAAI;EAAA;;EACnB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACZ,IAAGI,MAAH,EAAU;MACN,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCH,UAAU,CAAEI,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;MACD,CAF2B,EAEzB,IAFyB,CAA5B;MAIA,OAAO,MAAMC,aAAa,CAACH,QAAD,CAA1B;IACH,CAND,MAMK,CAAE;EACV,CARQ,EAQN,EARM,CAAT;EAUA,OAAOH,OAAP;AAEH,CAfD;;GAAMD,U;;AAiBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}